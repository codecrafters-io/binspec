name: Kafka Produce Request (v11)
slug: kafka-produce-request-v11
data:
  - 0x00 # Message length (4 bytes, 0x70 in hex, 112 in decimal)
  - 0x00
  - 0x00
  - 0x70
  - 0x00 # API key (2 bytes, 0x00 in hex, 0 in decimal => Produce)
  - 0x00
  - 0x00 # API version (2 bytes, 0x0b in hex, 11 in decimal)
  - 0x0b
  - 0x00 # Correlation ID (4 bytes, 0x07 in hex, 7 in decimal)
  - 0x00
  - 0x00
  - 0x07
  - 0x00 # Client ID length (2 bytes, 0x09 in hex, 9 in decimal) - compact string
  - 0x09
  - 0x6b # Client ID (9 bytes, "kafka-cli" in UTF-8): k
  - 0x61 # a
  - 0x66 # f
  - 0x6b # k
  - 0x61 # a
  - 0x2d # -
  - 0x63 # c
  - 0x6c # l
  - 0x69 # i
  - 0x00 # Empty tagged field array (1 byte, 0x00)
  - 0x01 # Transactional ID (nullable compact string) - null (1 byte, 0x01, which is -1 after ZigZag decoding)
  - 0x00 # Required Acks (2 bytes, 0x01 in hex, 1 in decimal)
  - 0x01
  - 0x00 # Timeout (4 bytes, 0x00 in hex, 0 in decimal)
  - 0x00
  - 0x00
  - 0x00
  - 0x02 # Topic data array length (1 byte, 0x02 in hex, 2 in decimal => 1 topic + 1 for compact array)
  - 0x04 # Topic name length (1 byte, 0x04 in hex, 4 in decimal including +1 for compact)
  - 0x66 # Topic name (3 bytes, "foo" in UTF-8)
  - 0x6f
  - 0x6f
  - 0x02 # Partition array length (1 byte, 0x02 in hex, 1 partition + 1 for compact array)
  - 0x00 # Partition ID (4 bytes, 0x00 in hex, 0 in decimal)
  - 0x00
  - 0x00
  - 0x00
  - 0x48 # RecordBatch length (1 byte, 0x48 in hex, 72 in decimal)
  - 0x00 # Record Batch - Base Offset (8 bytes, 0x00 => offset 0)
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00 # Batch Length (4 bytes, 0x3b in hex, 59 in decimal)
  - 0x00
  - 0x00
  - 0x3b
  - 0xff # Partition Leader Epoch (4 bytes, 0xffffffff => -1)
  - 0xff
  - 0xff
  - 0xff
  - 0x02 # Magic Byte (1 byte, 0x02 => v2)
  - 0x63 # CRC32 (4 bytes, 0x63b6ff13)
  - 0xb6
  - 0xff
  - 0x13
  - 0x00 # Attributes (2 bytes, 0x00 => no compression, create time, non-transactional, data batch)
  - 0x00
  - 0x00 # Last Offset Delta (4 bytes, 0x00 => 0)
  - 0x00
  - 0x00
  - 0x00
  - 0x00 # First Timestamp (8 bytes, 0x0198380343f8 => Jul 23 2025 03:59:54.872)
  - 0x00
  - 0x01
  - 0x98
  - 0x38
  - 0x03
  - 0x43
  - 0xf8
  - 0x00 # Max Timestamp (8 bytes, 0x0198380343f8 => Jul 23 2025 03:59:54.872)
  - 0x00
  - 0x01
  - 0x98
  - 0x38
  - 0x03
  - 0x43
  - 0xf8
  - 0x00 # Producer ID (8 bytes, 0x00 => 0)
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00
  - 0x00 # Producer Epoch (2 bytes, 0x00 => 0)
  - 0x00
  - 0x00 # Base Sequence (4 bytes, 0x00 => 0)
  - 0x00
  - 0x00
  - 0x00
  - 0x00 # Record Count (4 bytes, 0x01 => 1 record)
  - 0x00
  - 0x00
  - 0x01
  - 0x12 # Record - Length (varint, 0x12 => 18, so the length is 9 bytes (using zigzag encoding, refer to: https://protobuf.dev/programming-guides/encoding/#signed-ints))
  - 0x00 # Record Attributes (1 byte, 0x00)
  - 0x00 # Timestamp Delta (varint, 0x00 => 0)
  - 0x00 # Offset Delta (varint, 0x00 => 0)
  - 0x01 # Key Length (varint, 0x01 => null key)
  - 0x06 # Value Length (varint, 0x06 => 6, so the length is 3 bytes (using zigzag encoding, refer to: https://protobuf.dev/programming-guides/encoding/#signed-ints))
  - 0x62 # Value is a byte array of length 3 ("bar" in UTF-8) - b
  - 0x61 # a
  - 0x72 # r
  - 0x00 # Header Count (varint, 0x00 => no headers)
  - 0x00 # Partition tagged field array (1 byte, 0x00)
  - 0x00 # Topic tagged field array (1 byte, 0x00)
  - 0x00 # Request body tagged field array (1 byte, 0x00)
segments:
  - title: Message Size
    length_in_bytes: 4
    explanation_markdown: |
      Message Size is a 4-byte big-endian integer indicating the size of the rest of the message. All Kafka requests and responses start with this field.

      In this case, the value is 0x70 (112 in decimal) indicating that the rest of the message is 112 bytes long.
  - title: Request Header (v2)
    explanation_markdown: |
      The Request Header structure is common across all Kafka requests. It contains information on the API Key this request is for, the version of that API, and more.
    children:
      - title: API Key
        length_in_bytes: 2
        explanation_markdown: |
          The API key is a 2-byte integer that identifies the API Key that this request is for.

          Here it is 0x00 (0), which corresponds to Produce.
      - title: API Version
        length_in_bytes: 2
        explanation_markdown: |
          The API version is a 2-byte integer indicating the version of the API being used.

          Here, it is 0x0b (11) which corresponds to v11 of the Produce API.
      - title: Correlation ID
        length_in_bytes: 4
        explanation_markdown: |
          The Correlation ID is a 4-byte integer that will be echo-ed back in the response. When multiple requests are in-flight, this ID can be used to match responses with their corresponding requests.

          Here, it is 0x07 (7).
      - title: Client ID
        explanation_markdown: |
          The Client ID is a string identifying the client.

          Here, the value is "kafka-cli".
        children:
          - title: Length
            length_in_bytes: 2
            explanation_markdown: |
              The Client ID length is a 2-byte integer indicating the length of the Client ID string. Here, it is 0x09 (9).
          - title: Contents
            length_in_bytes: 9
            explanation_markdown: |
              The Client ID is a variable-length string identifying the client. In this case, it is "kafka-cli" encoded in UTF-8.
      - title: Tag buffer
        length_in_bytes: 1
        explanation_markdown: |
          An empty tagged field array, represented by a single byte of value 0x00.
  - title: Produce Request Body (v11)
    explanation_markdown: |
      The request body contains fields specific to the Produce request.
    children:
      - title: Transactional ID
        length_in_bytes: 1
        explanation_markdown: |
          The Transactional ID is a nullable compact string. A value of 0x01 indicates null (no transactional ID).

          In this case, the value is 0x01, but after ZigZag decoding, it is -1, indicating that the producer is not transactional.
      - title: Required Acks
        length_in_bytes: 2
        explanation_markdown: |
          The number of acknowledgments the producer requires the leader to have received before considering a request complete. Allowed values: 0 for no acknowledgments, 1 for only the leader and -1 for the full ISR.

          Here, it is 0x01 (1) indicating leader acknowledgment only.
      - title: Timeout
        length_in_bytes: 4
        explanation_markdown: |
          A 4-byte integer that represents the timeout to await a response in milliseconds.

          Here, it is 0x00 (0 in decimal), indicating no timeout.
      - title: Topic Data Array
        explanation_markdown: |
          An array of topics to produce to.

          This array is encoded as a `COMPACT_ARRAY`, which starts with a varint corresponding to the length of the array + 1, followed by each element.
        children:
          - title: Array Length
            length_in_bytes: 1
            explanation_markdown: |
              The length of the topic array + 1, encoded as a varint. Here, it is 0x02 (2), meaning that the array length is 1.
          - title: "Topic #1"
            explanation_markdown: |
              A single topic in the array.
            children:
              - title: Topic Name
                explanation_markdown: |
                  The topic name, represented as a compact string.
                children:
                  - title: String Length
                    length_in_bytes: 1
                    explanation_markdown: |
                      The length of the topic name compact string + 1, represented as an unsigned varint. Here, it is 0x04 (4), indicating that the length of the topic name is 3.
                  - title: String Content
                    length_in_bytes: 3
                    explanation_markdown: |
                      The actual topic name string. In this case, it is "foo" encoded in UTF-8.
              - title: Partitions Array
                explanation_markdown: |
                  An array of partitions for this topic.
                children:
                  - title: Array Length
                    length_in_bytes: 1
                    explanation_markdown: |
                      The length of the partition array + 1, encoded as an unsigned varint. Here, it is 0x02 (2), meaning that the array length is 1.
                  - title: Partition #1
                    explanation_markdown: |
                      Information about the first partition.
                    children:
                      - title: Partition ID
                        length_in_bytes: 4
                        explanation_markdown: |
                          A 4-byte integer representing the partition index.

                          Here, it is 0x00 (0), which corresponds to partition 0.
                      - title: Records Data
                        explanation_markdown: |
                          The record data to be produced, containing a record batch.
                        children:
                          - title: Records Length
                            length_in_bytes: 1
                            explanation_markdown: |
                              An unsigned varint representing the number of bytes of record batch data that follows. Here, 0x48 indicates 72 bytes.
                          - title: Record Batch
                            explanation_markdown: |
                              A batch of records. This has the same format as the on-disk record batches.
                            children:
                              - title: Base Offset
                                length_in_bytes: 8
                                explanation_markdown: |
                                  Base Offset is an 8-byte big-endian integer indicating the offset of the first record in this batch. For produce requests, this is usually 0.

                                  In this case, the value is `0x00`, which is `0` in decimal.
                              - title: Batch Length
                                length_in_bytes: 4
                                explanation_markdown: |
                                  Batch Length is a 4-byte big-endian integer indicating the length of the entire record batch in bytes.

                                  This value excludes the Base Offset (8 bytes) and the Batch Length (4 bytes) itself, but includes all other bytes in the record batch.

                                  In this case, the value is `0x3b`, which is `59` in decimal.
                              - title: Partition Leader Epoch
                                length_in_bytes: 4
                                explanation_markdown: |
                                  Partition Leader Epoch is a 4-byte big-endian integer indicating the epoch of the leader for this partition. It is a monotonically increasing number that is incremented by 1 whenever the partition leader changes. This value is used to detect out of order writes.

                                  In this case, the value is `0xffffffff`, which is `-1` in decimal, indicating that the producer is not aware of the leader epoch.
                              - title: Magic Byte
                                length_in_bytes: 1
                                explanation_markdown: |
                                  Magic Byte is a 1-byte integer indicating the version of the record batch format. This value is used to evolve the record batch format in a backward-compatible way.

                                  In this case, the value is `0x02`, which is `2` in decimal, corresponding to message format v2.
                              - title: CRC
                                length_in_bytes: 4
                                explanation_markdown: |
                                  CRC is a 4-byte big-endian integer indicating the CRC32-C checksum of the record batch.

                                  The CRC is computed over the data following the CRC field to the end of the record batch. The CRC32-C (Castagnoli) polynomial is used for the computation.

                                  In this case, the value is `0x63b6ff13`, which is `1672937235` in decimal.
                              - title: Attributes
                                length_in_bytes: 2
                                explanation_markdown: |
                                  Attributes is a 2-byte bitfield indicating the attributes of the record batch.

                                  Attributes is a bitmask of the following flags:

                                  - bit 0~2:
                                      - 0: no compression
                                      - 1: gzip
                                      - 2: snappy
                                      - 3: lz4
                                      - 4: zstd
                                  - bit 3: timestampType
                                  - bit 4: isTransactional (0 means not transactional)
                                  - bit 5: isControlBatch (0 means not a control batch)
                                  - bit 6: hasDeleteHorizonMs (0 means baseTimestamp is not set as the delete horizon for compaction)
                                  - bit 7~15: unused

                                  In this case, the value is `0x00`, which is `0` in decimal.
                              - title: Last Offset Delta
                                length_in_bytes: 4
                                explanation_markdown: |
                                  Last Offset Delta is a 4-byte big-endian integer indicating the difference between the last offset of this record batch and the base offset.

                                  In this case, the value is `0x00`, which is `0` in decimal, meaning that the last record's offset relative to the base offset is `0`.
                              - title: Base Timestamp
                                length_in_bytes: 8
                                explanation_markdown: |
                                  Base Timestamp is an 8-byte big-endian integer representing the timestamp of the first record in the batch.

                                  In this case, the value is `0x0198380343f8`, which is `1753286394872` in decimal. This is an unix timestamp in milliseconds, which is `2025-07-23 03:59:54.872` in UTC.
                              - title: Max Timestamp
                                length_in_bytes: 8
                                explanation_markdown: |
                                  Max Timestamp is an 8-byte big-endian integer representing the maximum timestamp among all records in the batch.

                                  In this case, the value is `0x0198380343f8`, which is `1753286394872` in decimal. This is an unix timestamp in milliseconds, which is `2025-07-23 03:59:54.872` in UTC.
                              - title: Producer ID
                                length_in_bytes: 8
                                explanation_markdown: |
                                  Producer ID is an 8-byte big-endian integer indicating the ID of the producer that produced the records in this batch.

                                  In this case, the value is `0x00`, which is `0` in decimal, indicating that the producer ID is not set.
                              - title: Producer Epoch
                                length_in_bytes: 2
                                explanation_markdown: |
                                  Producer Epoch is a 2-byte big-endian integer indicating the epoch of the producer that produced the records in this batch.

                                  In this case, the value is `0x00`, which is `0` in decimal, indicating that the producer epoch is not set.
                              - title: Base Sequence
                                length_in_bytes: 4
                                explanation_markdown: |
                                  Base Sequence is a 4-byte big-endian integer indicating the sequence number of the first record in a batch. It is used for idempotent and transactional producers to ensure correct ordering and prevent duplicates.

                                  A value of 0 indicates the producer is not idempotent.
                              - title: Records Count
                                length_in_bytes: 4
                                explanation_markdown: |
                                  A 4-byte big-endian integer indicating the number of records in the batch.

                                  In this case, the value is `0x01`, which is `1` in decimal, indicating that there is 1 record in the recordBatch.
                              - title: "Record #1"
                                explanation_markdown: |
                                  A single record within the batch.
                                children:
                                  - title: Length
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      A varint representing the length of the record.

                                      In this case, the value is `0x12`, which is `18` in decimal.
                                      But, after ZigZag decoding, the actual value is 9 (refer to: https://protobuf.dev/programming-guides/encoding/#signed-ints))
                                  - title: Attributes
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      Attributes is a 1-byte big-endian integer indicating the attributes of the record. Currently, this field is unused in the protocol.

                                      In this case, the value is `0x00`, which is `0` in decimal.
                                  - title: Timestamp Delta
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      A varint representing the time difference between this record's timestamp and the `Base Timestamp` of the batch.

                                      In this case, the value is `0x00`, which is `0` in decimal, meaning the timestamp is the same as the batch's `Base Timestamp`.
                                  - title: Offset Delta
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      Offset Delta is a signed variable size integer indicating the difference between the offset of the record and the base offset of the record batch.

                                      In this case, the value is `0x00`, which is `0` in decimal.
                                  - title: Key Length
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      Key Length is a signed variable size integer indicating the length of the key of the record.

                                      In this case, the value is `0x01`, which is `-1` after ZigZag decoding. This is a special value that indicates that the key is null.
                                  - title: Key
                                    length_in_bytes: 0
                                    explanation_markdown: |
                                      Key is a byte array indicating the key of the record.

                                      In this case, the key is null.
                                  - title: Value Length
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      Value Length is a signed variable size integer indicating the length of the value of the record.

                                      In this case, the value is `0x06`, which is `6` in decimal.
                                      But, after ZigZag decoding, the actual value is 3 (refer to: https://protobuf.dev/programming-guides/encoding/#signed-ints))
                                  - title: Value
                                    length_in_bytes: 3
                                    explanation_markdown: |
                                      Value is a byte array indicating the value of the record.

                                      The record's value. In this case, it is "bar" encoded in UTF-8.
                                  - title: Headers Count
                                    length_in_bytes: 1
                                    explanation_markdown: |
                                      Header array count is an unsigned variable size integer indicating the number of headers present.

                                      In this case, the value is `0`, indicating no headers.
                      - title: Tag Buffer
                        length_in_bytes: 1
                        explanation_markdown: |
                          An empty tagged field array, represented by a single byte of value 0x00.
              - title: Tag Buffer
                length_in_bytes: 1
                explanation_markdown: |
                  An empty tagged field array, represented by a single byte of value 0x00.
      - title: Tag Buffer
        length_in_bytes: 1
        explanation_markdown: |
          An empty tagged field array, represented by a single byte of value 0x00.